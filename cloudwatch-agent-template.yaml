apiVersion: v1
kind: ServiceAccount
metadata:
  name: {{CUSTOM_AGENT_NAME}}
  namespace: {{NAMESPACE}}
  labels:
    app: {{CUSTOM_AGENT_NAME}}
    component: cloudwatch-agent
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: {{CUSTOM_AGENT_NAME}}-configmap-access
  namespace: {{NAMESPACE}}
rules:
- apiGroups: [""]
  resources: ["configmaps"]
  verbs: ["get", "list", "watch", "create", "update", "patch"]
- apiGroups: [""]
  resources: ["events"]
  verbs: ["create", "patch", "update"]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: {{CUSTOM_AGENT_NAME}}-configmap-access
  namespace: {{NAMESPACE}}
subjects:
- kind: ServiceAccount
  name: {{CUSTOM_AGENT_NAME}}
  namespace: {{NAMESPACE}}
roleRef:
  kind: Role
  name: {{CUSTOM_AGENT_NAME}}-configmap-access
  apiGroup: rbac.authorization.k8s.io
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: {{CUSTOM_AGENT_NAME}}
  labels:
    app: {{CUSTOM_AGENT_NAME}}
    component: cloudwatch-agent
rules:
- apiGroups: [""]
  resources:
  - nodes
  - nodes/proxy
  - nodes/metrics
  - services
  - endpoints
  - pods
  - pods/logs
  verbs: ["get", "list", "watch"]
- apiGroups: ["apps"]
  resources:
  - deployments
  - daemonsets
  - replicasets
  - statefulsets
  verbs: ["get", "list", "watch"]
- apiGroups: [""]
  resources: ["events"]
  verbs: ["create", "patch", "update"]
- apiGroups: ["batch"]
  resources:
  - jobs
  verbs: ["get", "list", "watch"]
- apiGroups: ["discovery.k8s.io"]
  resources:
  - endpointslices
  verbs: ["get", "list", "watch"]
- nonResourceURLs: ["/metrics"]
  verbs: ["get"]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: {{CUSTOM_AGENT_NAME}}
  labels:
    app: {{CUSTOM_AGENT_NAME}}
    component: cloudwatch-agent
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: {{CUSTOM_AGENT_NAME}}
subjects:
- kind: ServiceAccount
  name: {{CUSTOM_AGENT_NAME}}
  namespace: {{NAMESPACE}}
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: {{CUSTOM_AGENT_NAME}}-config
  namespace: {{NAMESPACE}}
  labels:
    app: {{CUSTOM_AGENT_NAME}}
    component: cloudwatch-agent
data:
  cwagentconfig.json: |
{{CONFIG_JSON}}
---
apiVersion: apps/v1
kind: DaemonSet
metadata:
  name: {{CUSTOM_AGENT_NAME}}
  namespace: {{NAMESPACE}}
  labels:
    app: {{CUSTOM_AGENT_NAME}}
    component: cloudwatch-agent
spec:
  selector:
    matchLabels:
      app: {{CUSTOM_AGENT_NAME}}
  template:
    metadata:
      labels:
        app: {{CUSTOM_AGENT_NAME}}
        component: cloudwatch-agent
    spec:
      serviceAccountName: {{CUSTOM_AGENT_NAME}}
      hostNetwork: true
      containers:
      - name: cloudwatch-agent
        image: amazon/cloudwatch-agent:1.300056.0b1123
        ports:
        - containerPort: 8126
          hostPort: 8126
          protocol: UDP
        resources:
          limits:
            cpu: 200m
            memory: 200Mi
          requests:
            cpu: 100m
            memory: 100Mi
        env:
        - name: AWS_REGION
          value: {{REGION}}
        - name: AWS_DEFAULT_REGION
          value: {{REGION}}
        - name: CW_CONFIG_CONTENT
          valueFrom:
            configMapKeyRef:
              name: {{CUSTOM_AGENT_NAME}}-config
              key: cwagentconfig.json
        - name: AWS_ACCESS_KEY_ID
          valueFrom:
            secretKeyRef:
              name: {{CUSTOM_AGENT_NAME}}-credentials
              key: AWS_ACCESS_KEY_ID
        - name: AWS_SECRET_ACCESS_KEY
          valueFrom:
            secretKeyRef:
              name: {{CUSTOM_AGENT_NAME}}-credentials
              key: AWS_SECRET_ACCESS_KEY
        - name: HOST_IP
          valueFrom:
            fieldRef:
              fieldPath: status.hostIP
        - name: HOST_NAME
          valueFrom:
            fieldRef:
              fieldPath: spec.nodeName
        - name: K8S_NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        volumeMounts:
        - name: cwagentconfig
          mountPath: /opt/aws/amazon-cloudwatch-agent/etc/custom-amazon-cloudwatch-agent.json
          subPath: cwagentconfig.json
        - name: rootfs
          mountPath: /rootfs
          readOnly: true
        - name: dockersock
          mountPath: /var/run/docker.sock
          readOnly: true
        - name: containerd-sock
          mountPath: /run/containerd/containerd.sock
          readOnly: true
        - name: varlibdocker
          mountPath: /var/lib/docker
          readOnly: true
        - name: sys
          mountPath: /sys
          readOnly: true
        - name: devdisk
          mountPath: /dev/disk
          readOnly: true
      volumes:
      - name: cwagentconfig
        configMap:
          name: {{CUSTOM_AGENT_NAME}}-config
      - name: rootfs
        hostPath:
          path: /
      - name: dockersock
        hostPath:
          path: /var/run/docker.sock
      - name: containerd-sock
        hostPath:
          path: /run/containerd/containerd.sock
      - name: varlibdocker
        hostPath:
          path: /var/lib/docker
      - name: sys
        hostPath:
          path: /sys
      - name: devdisk
        hostPath:
          path: /dev/disk
      terminationGracePeriodSeconds: 60
      nodeSelector:
        kubernetes.io/os: linux